// <auto-generated />
using DesafioMarlin.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioMarlin.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DesafioMarlin")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DesafioMarlin.Domain.Entities.Models.Aluno", b =>
                {
                    b.Property<int>("Id_Aluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_aluno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Aluno"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id_Aluno")
                        .HasName("id_aluno");

                    b.ToTable("tbAluno", "DesafioMarlin");
                });

            modelBuilder.Entity("DesafioMarlin.Domain.Entities.Models.AlunosTurma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano_Letivo")
                        .HasColumnType("int")
                        .HasColumnName("ano_letivo");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome_Aluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome_aluno");

                    b.Property<int>("Numero_Turma")
                        .HasColumnType("int")
                        .HasColumnName("numero_turma");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("tbAlunosTurma", "DesafioMarlin");
                });

            modelBuilder.Entity("DesafioMarlin.Domain.Entities.Models.Turma", b =>
                {
                    b.Property<int>("Id_Turma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_turma");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Turma"));

                    b.Property<int>("Ano_Letivo")
                        .HasColumnType("int")
                        .HasColumnName("ano_letivo");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("numero");

                    b.HasKey("Id_Turma")
                        .HasName("id_turma");

                    b.ToTable("tbTurma", "DesafioMarlin");
                });
#pragma warning restore 612, 618
        }
    }
}
